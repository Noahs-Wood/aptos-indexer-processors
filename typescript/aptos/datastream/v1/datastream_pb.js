// source: aptos/datastream/v1/datastream.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var aptos_util_timestamp_timestamp_pb = require('../../../aptos/util/timestamp/timestamp_pb.js');
goog.object.extend(proto, aptos_util_timestamp_timestamp_pb);
goog.exportSymbol('proto.aptos.datastream.v1.RawDatastreamRequest', null, global);
goog.exportSymbol('proto.aptos.datastream.v1.RawDatastreamResponse', null, global);
goog.exportSymbol('proto.aptos.datastream.v1.RawDatastreamResponse.ResponseCase', null, global);
goog.exportSymbol('proto.aptos.datastream.v1.StreamStatus', null, global);
goog.exportSymbol('proto.aptos.datastream.v1.StreamStatus.StatusType', null, global);
goog.exportSymbol('proto.aptos.datastream.v1.TransactionOutput', null, global);
goog.exportSymbol('proto.aptos.datastream.v1.TransactionsOutput', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aptos.datastream.v1.TransactionsOutput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.aptos.datastream.v1.TransactionsOutput.repeatedFields_, null);
};
goog.inherits(proto.aptos.datastream.v1.TransactionsOutput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aptos.datastream.v1.TransactionsOutput.displayName = 'proto.aptos.datastream.v1.TransactionsOutput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aptos.datastream.v1.TransactionOutput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aptos.datastream.v1.TransactionOutput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aptos.datastream.v1.TransactionOutput.displayName = 'proto.aptos.datastream.v1.TransactionOutput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aptos.datastream.v1.StreamStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aptos.datastream.v1.StreamStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aptos.datastream.v1.StreamStatus.displayName = 'proto.aptos.datastream.v1.StreamStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aptos.datastream.v1.RawDatastreamRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aptos.datastream.v1.RawDatastreamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aptos.datastream.v1.RawDatastreamRequest.displayName = 'proto.aptos.datastream.v1.RawDatastreamRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aptos.datastream.v1.RawDatastreamResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.aptos.datastream.v1.RawDatastreamResponse.oneofGroups_);
};
goog.inherits(proto.aptos.datastream.v1.RawDatastreamResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aptos.datastream.v1.RawDatastreamResponse.displayName = 'proto.aptos.datastream.v1.RawDatastreamResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.aptos.datastream.v1.TransactionsOutput.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aptos.datastream.v1.TransactionsOutput.prototype.toObject = function(opt_includeInstance) {
  return proto.aptos.datastream.v1.TransactionsOutput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aptos.datastream.v1.TransactionsOutput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aptos.datastream.v1.TransactionsOutput.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),
    proto.aptos.datastream.v1.TransactionOutput.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aptos.datastream.v1.TransactionsOutput}
 */
proto.aptos.datastream.v1.TransactionsOutput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aptos.datastream.v1.TransactionsOutput;
  return proto.aptos.datastream.v1.TransactionsOutput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aptos.datastream.v1.TransactionsOutput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aptos.datastream.v1.TransactionsOutput}
 */
proto.aptos.datastream.v1.TransactionsOutput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.aptos.datastream.v1.TransactionOutput;
      reader.readMessage(value,proto.aptos.datastream.v1.TransactionOutput.deserializeBinaryFromReader);
      msg.addTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aptos.datastream.v1.TransactionsOutput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aptos.datastream.v1.TransactionsOutput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aptos.datastream.v1.TransactionsOutput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aptos.datastream.v1.TransactionsOutput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.aptos.datastream.v1.TransactionOutput.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TransactionOutput transactions = 1;
 * @return {!Array<!proto.aptos.datastream.v1.TransactionOutput>}
 */
proto.aptos.datastream.v1.TransactionsOutput.prototype.getTransactionsList = function() {
  return /** @type{!Array<!proto.aptos.datastream.v1.TransactionOutput>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.aptos.datastream.v1.TransactionOutput, 1));
};


/**
 * @param {!Array<!proto.aptos.datastream.v1.TransactionOutput>} value
 * @return {!proto.aptos.datastream.v1.TransactionsOutput} returns this
*/
proto.aptos.datastream.v1.TransactionsOutput.prototype.setTransactionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.aptos.datastream.v1.TransactionOutput=} opt_value
 * @param {number=} opt_index
 * @return {!proto.aptos.datastream.v1.TransactionOutput}
 */
proto.aptos.datastream.v1.TransactionsOutput.prototype.addTransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.aptos.datastream.v1.TransactionOutput, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.aptos.datastream.v1.TransactionsOutput} returns this
 */
proto.aptos.datastream.v1.TransactionsOutput.prototype.clearTransactionsList = function() {
  return this.setTransactionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aptos.datastream.v1.TransactionOutput.prototype.toObject = function(opt_includeInstance) {
  return proto.aptos.datastream.v1.TransactionOutput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aptos.datastream.v1.TransactionOutput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aptos.datastream.v1.TransactionOutput.toObject = function(includeInstance, msg) {
  var f, obj = {
    encodedProtoData: msg.getEncodedProtoData_asB64(),
    version: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timestamp: (f = msg.getTimestamp()) && aptos_util_timestamp_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aptos.datastream.v1.TransactionOutput}
 */
proto.aptos.datastream.v1.TransactionOutput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aptos.datastream.v1.TransactionOutput;
  return proto.aptos.datastream.v1.TransactionOutput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aptos.datastream.v1.TransactionOutput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aptos.datastream.v1.TransactionOutput}
 */
proto.aptos.datastream.v1.TransactionOutput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEncodedProtoData(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVersion(value);
      break;
    case 3:
      var value = new aptos_util_timestamp_timestamp_pb.Timestamp;
      reader.readMessage(value,aptos_util_timestamp_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aptos.datastream.v1.TransactionOutput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aptos.datastream.v1.TransactionOutput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aptos.datastream.v1.TransactionOutput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aptos.datastream.v1.TransactionOutput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEncodedProtoData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      aptos_util_timestamp_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes encoded_proto_data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.aptos.datastream.v1.TransactionOutput.prototype.getEncodedProtoData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes encoded_proto_data = 1;
 * This is a type-conversion wrapper around `getEncodedProtoData()`
 * @return {string}
 */
proto.aptos.datastream.v1.TransactionOutput.prototype.getEncodedProtoData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEncodedProtoData()));
};


/**
 * optional bytes encoded_proto_data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncodedProtoData()`
 * @return {!Uint8Array}
 */
proto.aptos.datastream.v1.TransactionOutput.prototype.getEncodedProtoData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEncodedProtoData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.aptos.datastream.v1.TransactionOutput} returns this
 */
proto.aptos.datastream.v1.TransactionOutput.prototype.setEncodedProtoData = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint64 version = 2;
 * @return {number}
 */
proto.aptos.datastream.v1.TransactionOutput.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.aptos.datastream.v1.TransactionOutput} returns this
 */
proto.aptos.datastream.v1.TransactionOutput.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional aptos.util.timestamp.Timestamp timestamp = 3;
 * @return {?proto.aptos.util.timestamp.Timestamp}
 */
proto.aptos.datastream.v1.TransactionOutput.prototype.getTimestamp = function() {
  return /** @type{?proto.aptos.util.timestamp.Timestamp} */ (
    jspb.Message.getWrapperField(this, aptos_util_timestamp_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.aptos.util.timestamp.Timestamp|undefined} value
 * @return {!proto.aptos.datastream.v1.TransactionOutput} returns this
*/
proto.aptos.datastream.v1.TransactionOutput.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aptos.datastream.v1.TransactionOutput} returns this
 */
proto.aptos.datastream.v1.TransactionOutput.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aptos.datastream.v1.TransactionOutput.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aptos.datastream.v1.StreamStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.aptos.datastream.v1.StreamStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aptos.datastream.v1.StreamStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aptos.datastream.v1.StreamStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    startVersion: jspb.Message.getFieldWithDefault(msg, 2, 0),
    endVersion: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aptos.datastream.v1.StreamStatus}
 */
proto.aptos.datastream.v1.StreamStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aptos.datastream.v1.StreamStatus;
  return proto.aptos.datastream.v1.StreamStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aptos.datastream.v1.StreamStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aptos.datastream.v1.StreamStatus}
 */
proto.aptos.datastream.v1.StreamStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.aptos.datastream.v1.StreamStatus.StatusType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStartVersion(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEndVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aptos.datastream.v1.StreamStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aptos.datastream.v1.StreamStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aptos.datastream.v1.StreamStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aptos.datastream.v1.StreamStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getStartVersion();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.aptos.datastream.v1.StreamStatus.StatusType = {
  STATUS_TYPE_UNSPECIFIED: 0,
  STATUS_TYPE_INIT: 1,
  STATUS_TYPE_BATCH_END: 2
};

/**
 * optional StatusType type = 1;
 * @return {!proto.aptos.datastream.v1.StreamStatus.StatusType}
 */
proto.aptos.datastream.v1.StreamStatus.prototype.getType = function() {
  return /** @type {!proto.aptos.datastream.v1.StreamStatus.StatusType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.aptos.datastream.v1.StreamStatus.StatusType} value
 * @return {!proto.aptos.datastream.v1.StreamStatus} returns this
 */
proto.aptos.datastream.v1.StreamStatus.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 start_version = 2;
 * @return {number}
 */
proto.aptos.datastream.v1.StreamStatus.prototype.getStartVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.aptos.datastream.v1.StreamStatus} returns this
 */
proto.aptos.datastream.v1.StreamStatus.prototype.setStartVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 end_version = 3;
 * @return {number}
 */
proto.aptos.datastream.v1.StreamStatus.prototype.getEndVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.aptos.datastream.v1.StreamStatus} returns this
 */
proto.aptos.datastream.v1.StreamStatus.prototype.setEndVersion = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.aptos.datastream.v1.StreamStatus} returns this
 */
proto.aptos.datastream.v1.StreamStatus.prototype.clearEndVersion = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aptos.datastream.v1.StreamStatus.prototype.hasEndVersion = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aptos.datastream.v1.RawDatastreamRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.aptos.datastream.v1.RawDatastreamRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aptos.datastream.v1.RawDatastreamRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aptos.datastream.v1.RawDatastreamRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    startingVersion: jspb.Message.getFieldWithDefault(msg, 1, 0),
    transactionsCount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aptos.datastream.v1.RawDatastreamRequest}
 */
proto.aptos.datastream.v1.RawDatastreamRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aptos.datastream.v1.RawDatastreamRequest;
  return proto.aptos.datastream.v1.RawDatastreamRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aptos.datastream.v1.RawDatastreamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aptos.datastream.v1.RawDatastreamRequest}
 */
proto.aptos.datastream.v1.RawDatastreamRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStartingVersion(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTransactionsCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aptos.datastream.v1.RawDatastreamRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aptos.datastream.v1.RawDatastreamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aptos.datastream.v1.RawDatastreamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aptos.datastream.v1.RawDatastreamRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 starting_version = 1;
 * @return {number}
 */
proto.aptos.datastream.v1.RawDatastreamRequest.prototype.getStartingVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.aptos.datastream.v1.RawDatastreamRequest} returns this
 */
proto.aptos.datastream.v1.RawDatastreamRequest.prototype.setStartingVersion = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.aptos.datastream.v1.RawDatastreamRequest} returns this
 */
proto.aptos.datastream.v1.RawDatastreamRequest.prototype.clearStartingVersion = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aptos.datastream.v1.RawDatastreamRequest.prototype.hasStartingVersion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 transactions_count = 2;
 * @return {number}
 */
proto.aptos.datastream.v1.RawDatastreamRequest.prototype.getTransactionsCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.aptos.datastream.v1.RawDatastreamRequest} returns this
 */
proto.aptos.datastream.v1.RawDatastreamRequest.prototype.setTransactionsCount = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.aptos.datastream.v1.RawDatastreamRequest} returns this
 */
proto.aptos.datastream.v1.RawDatastreamRequest.prototype.clearTransactionsCount = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aptos.datastream.v1.RawDatastreamRequest.prototype.hasTransactionsCount = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.aptos.datastream.v1.RawDatastreamResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.aptos.datastream.v1.RawDatastreamResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  STATUS: 1,
  DATA: 2
};

/**
 * @return {proto.aptos.datastream.v1.RawDatastreamResponse.ResponseCase}
 */
proto.aptos.datastream.v1.RawDatastreamResponse.prototype.getResponseCase = function() {
  return /** @type {proto.aptos.datastream.v1.RawDatastreamResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.aptos.datastream.v1.RawDatastreamResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aptos.datastream.v1.RawDatastreamResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.aptos.datastream.v1.RawDatastreamResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aptos.datastream.v1.RawDatastreamResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aptos.datastream.v1.RawDatastreamResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && proto.aptos.datastream.v1.StreamStatus.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.aptos.datastream.v1.TransactionsOutput.toObject(includeInstance, f),
    chainId: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aptos.datastream.v1.RawDatastreamResponse}
 */
proto.aptos.datastream.v1.RawDatastreamResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aptos.datastream.v1.RawDatastreamResponse;
  return proto.aptos.datastream.v1.RawDatastreamResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aptos.datastream.v1.RawDatastreamResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aptos.datastream.v1.RawDatastreamResponse}
 */
proto.aptos.datastream.v1.RawDatastreamResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.aptos.datastream.v1.StreamStatus;
      reader.readMessage(value,proto.aptos.datastream.v1.StreamStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.aptos.datastream.v1.TransactionsOutput;
      reader.readMessage(value,proto.aptos.datastream.v1.TransactionsOutput.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChainId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aptos.datastream.v1.RawDatastreamResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aptos.datastream.v1.RawDatastreamResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aptos.datastream.v1.RawDatastreamResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aptos.datastream.v1.RawDatastreamResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.aptos.datastream.v1.StreamStatus.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.aptos.datastream.v1.TransactionsOutput.serializeBinaryToWriter
    );
  }
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional StreamStatus status = 1;
 * @return {?proto.aptos.datastream.v1.StreamStatus}
 */
proto.aptos.datastream.v1.RawDatastreamResponse.prototype.getStatus = function() {
  return /** @type{?proto.aptos.datastream.v1.StreamStatus} */ (
    jspb.Message.getWrapperField(this, proto.aptos.datastream.v1.StreamStatus, 1));
};


/**
 * @param {?proto.aptos.datastream.v1.StreamStatus|undefined} value
 * @return {!proto.aptos.datastream.v1.RawDatastreamResponse} returns this
*/
proto.aptos.datastream.v1.RawDatastreamResponse.prototype.setStatus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.aptos.datastream.v1.RawDatastreamResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aptos.datastream.v1.RawDatastreamResponse} returns this
 */
proto.aptos.datastream.v1.RawDatastreamResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aptos.datastream.v1.RawDatastreamResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TransactionsOutput data = 2;
 * @return {?proto.aptos.datastream.v1.TransactionsOutput}
 */
proto.aptos.datastream.v1.RawDatastreamResponse.prototype.getData = function() {
  return /** @type{?proto.aptos.datastream.v1.TransactionsOutput} */ (
    jspb.Message.getWrapperField(this, proto.aptos.datastream.v1.TransactionsOutput, 2));
};


/**
 * @param {?proto.aptos.datastream.v1.TransactionsOutput|undefined} value
 * @return {!proto.aptos.datastream.v1.RawDatastreamResponse} returns this
*/
proto.aptos.datastream.v1.RawDatastreamResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.aptos.datastream.v1.RawDatastreamResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aptos.datastream.v1.RawDatastreamResponse} returns this
 */
proto.aptos.datastream.v1.RawDatastreamResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aptos.datastream.v1.RawDatastreamResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 chain_id = 3;
 * @return {number}
 */
proto.aptos.datastream.v1.RawDatastreamResponse.prototype.getChainId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.aptos.datastream.v1.RawDatastreamResponse} returns this
 */
proto.aptos.datastream.v1.RawDatastreamResponse.prototype.setChainId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


goog.object.extend(exports, proto.aptos.datastream.v1);
